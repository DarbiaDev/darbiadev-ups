name: Lint & Test

on:
  push:
    branches:
      - main
  pull_request:


jobs:
  lint-test:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11.0-rc.1" ]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    env:
      CACHE_VERSION: v4

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get cached dependencies
        uses: actions/cache@v3
        id: pdm-cache
        with:
          path: ./__pypackages__
          key: ${{ env.CACHE_VERSION }}-${{ runner.os }}-pdm-${{ hashFiles('**/pyproject.toml') }}

      - name: Install PDM
        run: pip install pdm

      - name: Install dependencies
        run: python -m pdm install

      # Run pylint and have it format the linting errors in the format of
      # the GitHub Workflow command to register error annotations. This
      # means that our pylint output is automatically added as an error
      # annotation to both the run result and in the "Files" tab of a
      # pull request.
      #
      # Format used:
      # ::error file={filename},line={line},col={col}::{message}
      - name: Run pylint
        run: "python -m pdm run pylint src/ \
        --msg-template='::error file={path},line={line},col={column}::[pylint] {category} {msg_id}: {msg}'"

      - name: Run tests and generate coverage report
        run: python -m pdm run pytest --cov --disable-warnings -q
